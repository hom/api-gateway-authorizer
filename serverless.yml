service: api-gateway-guard
frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-deployment-bucket

custom:
  tableName: users-table-${sls:stage}

provider:
  name: aws
  region: cn-northwest-1
  runtime: nodejs18.x
  endpointType: REGIONAL
  deploymentBucket:
    name: mengj-test-deployment-bucket
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${self:custom.tableName}

package:
  patterns:
    - '!**'
    - dist/lambda.js(.map)?
    - dist/auth-guard.js(.map)?
    - package.json
    - pnpm-lock.json

functions:
  api:
    handler: index.handler
    description: Main handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
          authorizer:
            name: AuthGuard
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
  AuthGuard:
    handler: auth-guard.handler
    description: AuthGuard handler

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
